/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package my.matrixdashboard;

import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.net.URI;
import java.io.*;

// for OWASP ZAP
import java.nio.charset.StandardCharsets;
import org.zaproxy.clientapi.core.ApiResponse;
import org.zaproxy.clientapi.core.ApiResponseElement;
import org.zaproxy.clientapi.core.ClientApi;

/**
 *
 * @author user1
 */
public class CellDialog extends javax.swing.JPanel {

    CellPanel cpanel = null;
    JFrame f = null;
    JDialog d = null;
    
    char cButtonSelected = ' ';
    static final char TYPE_APPPAGE = 'A';
    static final char TYPE_DOC = 'D';
    static final char TYPE_TOOL = 'T';
    static final char TYPE_BUGREPORT = 'B';
    
    // each element is an index into cpanel.cellpaths()
    ArrayList<Integer> AppPageIndexes = null;
    ArrayList<Integer> DocIndexes = null;
    ArrayList<Integer> ToolIndexes = null;
    ArrayList<Integer> BugReportIndexes = null;
    
    int ncurrentselected_apppage_in_combobox = 0;
    int ncurrentselected_doc_in_combobox = 0;
    int ncurrentselected_tool_in_combobox = 0;
    int ncurrentselected_bugreport_in_combobox = 0;
    
    CellPath currentcpath = null;
    boolean bLowerPaneEditable = false;
    

    /**
     * Creates new form CellDialog
     */
    public CellDialog(JFrame f, JDialog d, CellPanel cpanel) {
        System.out.println("CellDialog.constructor: called, cpanel.c.id == " + cpanel.c.id);
        this.f = f;
        this.d = d;
        this.cpanel = cpanel;
        
        initComponents();
        buttonGroup1.add(jAppPagesRadioButton);
        buttonGroup1.add(jBugReportsRadioButton);
        buttonGroup1.add(jDocsRadioButton);
        buttonGroup1.add(jToolsRadioButton);
        
        currentcpath = cpanel.cellpaths.get(0);
        System.out.println("CellDialog.constructor: currentcpath == " + currentcpath);
        cButtonSelected = currentcpath.cellpathtype.charAt(0);
        System.out.println("CellDialog.constructor: cButtonSelected == '" + cButtonSelected + "'");
        
        setfourtypearrays();
        
        setapppagescomboboxcontents();
        setdocscomboboxcontents();
        settoolscomboboxcontents();
        setbugreportscomboboxcontents();
        
        setpathtypescomboboxcontents();
        setchoosetoolcomboboxcontents();

        setupperpanestate();
        setlowerpanecontents();
        bLowerPaneEditable = false;
        setlowerpanestate();
    }
    
    private void setfourtypearrays() {
        System.out.println("setfourtypearrays: called");
        AppPageIndexes = new ArrayList();
        DocIndexes = new ArrayList();
        ToolIndexes = new ArrayList();
        BugReportIndexes = new ArrayList();
        int i = 0;
        for(CellPath cellpath : this.cpanel.cellpaths) {
            switch (cellpath.cellpathtype.charAt(0)) {
                case TYPE_APPPAGE:
                    AppPageIndexes.add(i);
                    break;
                case TYPE_DOC:
                    DocIndexes.add(i);
                    break;
                case TYPE_TOOL:
                    ToolIndexes.add(i);
                    break;
                case TYPE_BUGREPORT:
                    BugReportIndexes.add(i);
                    break;
            }
            i++;
        }
    }               

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jAppPagesLabel = new javax.swing.JLabel();
        jAppPagesComboBox = new javax.swing.JComboBox<>();
        jDocsLabel = new javax.swing.JLabel();
        jDocsComboBox = new javax.swing.JComboBox<>();
        jToolsLabel = new javax.swing.JLabel();
        jToolsComboBox = new javax.swing.JComboBox<>();
        jBugReportsLabel = new javax.swing.JLabel();
        jBugReportsComboBox = new javax.swing.JComboBox<>();
        jAppPagesRadioButton = new javax.swing.JRadioButton();
        jDocsRadioButton = new javax.swing.JRadioButton();
        jToolsRadioButton = new javax.swing.JRadioButton();
        jBugReportsRadioButton = new javax.swing.JRadioButton();
        jCellPathTypeLabel = new javax.swing.JLabel();
        jCellPathNameLabel = new javax.swing.JLabel();
        jPathTypeLabel = new javax.swing.JLabel();
        jPathTypeComboBox = new javax.swing.JComboBox<>();
        jPathLabel = new javax.swing.JLabel();
        jPathTextField = new javax.swing.JTextField();
        jNameTextField = new javax.swing.JTextField();
        jChooseFileButton = new javax.swing.JButton();
        jChooseToolComboBox = new javax.swing.JComboBox<>();
        jArgsLabel = new javax.swing.JLabel();
        jArgsTextField = new javax.swing.JTextField();
        jDeleteButton = new javax.swing.JButton();
        jCancelButton = new javax.swing.JButton();
        jSaveButton = new javax.swing.JButton();
        jCloseCellButton1 = new javax.swing.JButton();
        jRunButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jNewButton = new javax.swing.JButton();
        jEditButton = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(438, 429));

        jAppPagesLabel.setText("App pages");

        jAppPagesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jAppPagesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAppPagesComboBoxActionPerformed(evt);
            }
        });

        jDocsLabel.setText("Docs");

        jDocsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jDocsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDocsComboBoxActionPerformed(evt);
            }
        });

        jToolsLabel.setText("Tools");

        jToolsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jToolsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToolsComboBoxActionPerformed(evt);
            }
        });

        jBugReportsLabel.setText("Bug reports");

        jBugReportsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jBugReportsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBugReportsComboBoxActionPerformed(evt);
            }
        });

        jAppPagesRadioButton.setText("jAppPageRadioButton");
        jAppPagesRadioButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jAppPagesRadioButtonStateChanged(evt);
            }
        });
        jAppPagesRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAppPagesRadioButtonActionPerformed(evt);
            }
        });

        jDocsRadioButton.setText("jAppPageRadioButton");
        jDocsRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDocsRadioButtonActionPerformed(evt);
            }
        });

        jToolsRadioButton.setText("jAppPageRadioButton");
        jToolsRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToolsRadioButtonActionPerformed(evt);
            }
        });

        jBugReportsRadioButton.setText("jAppPageRadioButton");
        jBugReportsRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBugReportsRadioButtonActionPerformed(evt);
            }
        });

        jCellPathTypeLabel.setText("App page");

        jCellPathNameLabel.setText("Name");

        jPathTypeLabel.setText("Path type");

        jPathTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPathTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPathTypeComboBoxActionPerformed(evt);
            }
        });

        jPathLabel.setText("Path");

        jPathTextField.setText("path");

        jNameTextField.setText("page name");
        jNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNameTextFieldActionPerformed(evt);
            }
        });

        jChooseFileButton.setText("Choose File");
        jChooseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChooseFileButtonActionPerformed(evt);
            }
        });

        jChooseToolComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jChooseToolComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jChooseToolComboBoxActionPerformed(evt);
            }
        });

        jArgsLabel.setText("Args");

        jArgsTextField.setText("args");

        jDeleteButton.setBackground(new java.awt.Color(247, 4, 4));
        jDeleteButton.setText("Delete");
        jDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteButtonActionPerformed(evt);
            }
        });

        jCancelButton.setText("Cancel");
        jCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCancelButtonActionPerformed(evt);
            }
        });

        jSaveButton.setText("Save");
        jSaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSaveButtonActionPerformed(evt);
            }
        });

        jCloseCellButton1.setText("Close Cell");
        jCloseCellButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCloseCellButton1ActionPerformed(evt);
            }
        });

        jRunButton.setBackground(new java.awt.Color(63, 241, 65));
        jRunButton.setText("Run");
        jRunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRunButtonActionPerformed(evt);
            }
        });

        jNewButton.setText("New");
        jNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNewButtonActionPerformed(evt);
            }
        });

        jEditButton.setText("Edit");
        jEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEditButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jAppPagesRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDocsRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jToolsRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBugReportsRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jAppPagesLabel)
                            .addComponent(jDocsLabel)
                            .addComponent(jToolsLabel)
                            .addComponent(jBugReportsLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jAppPagesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCloseCellButton1)
                                .addGap(63, 63, 63))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jToolsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jDocsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jBugReportsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(66, 66, 66)
                                        .addComponent(jNewButton)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jCellPathTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(192, 192, 192))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jCellPathNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jPathTypeLabel, javax.swing.GroupLayout.Alignment.LEADING))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jNameTextField)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jPathTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jChooseToolComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(jChooseFileButton))))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jPathLabel)
                                                .addComponent(jArgsLabel))
                                            .addGap(24, 24, 24)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(12, 12, 12)
                                                    .addComponent(jEditButton))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jPathTextField)
                                                    .addComponent(jArgsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jDeleteButton)
                                        .addGap(146, 146, 146)
                                        .addComponent(jRunButton)
                                        .addGap(48, 48, 48)
                                        .addComponent(jCancelButton)
                                        .addGap(34, 34, 34)
                                        .addComponent(jSaveButton)
                                        .addGap(15, 15, 15))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addContainerGap(46, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAppPagesLabel)
                    .addComponent(jAppPagesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAppPagesRadioButton)
                    .addComponent(jCloseCellButton1))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDocsLabel)
                    .addComponent(jDocsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDocsRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToolsLabel)
                    .addComponent(jToolsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolsRadioButton))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBugReportsLabel)
                    .addComponent(jBugReportsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBugReportsRadioButton)
                    .addComponent(jNewButton))
                .addGap(30, 30, 30)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCellPathTypeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCellPathNameLabel)
                    .addComponent(jNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPathTypeLabel)
                    .addComponent(jPathTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jChooseFileButton)
                    .addComponent(jChooseToolComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPathLabel)
                    .addComponent(jPathTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jArgsLabel)
                    .addComponent(jArgsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDeleteButton)
                    .addComponent(jCancelButton)
                    .addComponent(jSaveButton)
                    .addComponent(jRunButton)
                    .addComponent(jEditButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jNameTextFieldActionPerformed
    
    private void setapppagescomboboxcontents() {
        System.out.println("setapppagescomboboxcontents: called");
        String[] names = new String[40];
        int i = 0;
        for(Integer index : AppPageIndexes)
             names[i++] = cpanel.cellpaths.get(index).pathname;
        jAppPagesComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(names));
    }               
    
    private void setdocscomboboxcontents() {
        System.out.println("setdocscomboboxcontents: called");
        String[] names = new String[40];
        int i = 0;
        for(Integer index : DocIndexes)
             names[i++] = cpanel.cellpaths.get(index).pathname;
        jDocsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(names));
    }               
    
    private void settoolscomboboxcontents() {
        System.out.println("settoolscomboboxcontents: called");
        String[] names = new String[40];
        int i = 0;
        for(Integer index : ToolIndexes)
             names[i++] = cpanel.cellpaths.get(index).pathname;
        jToolsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(names));
    }               
    
    private void setbugreportscomboboxcontents() {
        System.out.println("setbugreportscomboboxcontents: called");
        String[] names = new String[40];
        int i = 0;
        for(Integer index : BugReportIndexes)
             names[i++] = cpanel.cellpaths.get(index).pathname;
        jBugReportsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(names));
    }               

    private void jAppPagesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAppPagesComboBoxActionPerformed
        JComboBox comboBox = (JComboBox) evt.getSource();
        String selected = (String)(comboBox.getSelectedItem());
        System.out.println("jAppPagesComboBoxActionPerformed: " + selected);

        int index = comboBox.getSelectedIndex();
        ncurrentselected_apppage_in_combobox = index;
        currentcpath = cpanel.cellpaths.get(AppPageIndexes.get(index));

        setupperpanestate();
        setlowerpanecontents();
        bLowerPaneEditable = false;
        setlowerpanestate();
    }//GEN-LAST:event_jAppPagesComboBoxActionPerformed

    private void jDocsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDocsComboBoxActionPerformed
        JComboBox comboBox = (JComboBox) evt.getSource();
        String selected = (String)(comboBox.getSelectedItem());
        System.out.println("jDocsComboBoxActionPerformed: " + selected);

        int index = comboBox.getSelectedIndex();
        ncurrentselected_doc_in_combobox = index;
        currentcpath = cpanel.cellpaths.get(DocIndexes.get(index));

        setupperpanestate();
        setlowerpanecontents();
        bLowerPaneEditable = false;
        setlowerpanestate();
    }//GEN-LAST:event_jDocsComboBoxActionPerformed

    private void jToolsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToolsComboBoxActionPerformed
        JComboBox comboBox = (JComboBox) evt.getSource();
        String selected = (String)(comboBox.getSelectedItem());
        System.out.println("jToolsComboBoxActionPerformed: " + selected);

        int index = comboBox.getSelectedIndex();
        ncurrentselected_tool_in_combobox = index;
        currentcpath = cpanel.cellpaths.get(ToolIndexes.get(index));

        setupperpanestate();
        setlowerpanecontents();
        bLowerPaneEditable = false;
        setlowerpanestate();
    }//GEN-LAST:event_jToolsComboBoxActionPerformed

    private void jBugReportsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBugReportsComboBoxActionPerformed
        JComboBox comboBox = (JComboBox) evt.getSource();
        String selected = (String)(comboBox.getSelectedItem());
        System.out.println("jBugReportsComboBoxActionPerformed: " + selected);

        int index = comboBox.getSelectedIndex();
        ncurrentselected_bugreport_in_combobox = index;
        currentcpath = cpanel.cellpaths.get(BugReportIndexes.get(index));

        setupperpanestate();
        setlowerpanecontents();
        bLowerPaneEditable = false;
        setlowerpanestate();
    }//GEN-LAST:event_jBugReportsComboBoxActionPerformed

    private void jAppPagesRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAppPagesRadioButtonActionPerformed
        //System.out.println("jAppPagesRadioButtonActionPerformed: " + evt);
        if (cButtonSelected != TYPE_APPPAGE) {
            if (jAppPagesRadioButton.isSelected()) {
                System.out.println("jAppPagesRadioButtonActionPerformed: selected now");
                cButtonSelected = TYPE_APPPAGE;
                int index = jAppPagesComboBox.getSelectedIndex();
                ncurrentselected_apppage_in_combobox = index;
                currentcpath = cpanel.cellpaths.get(AppPageIndexes.get(index));
                setupperpanestate();
                setlowerpanecontents();
            } else {
                // should never get this, if the button-group is working
                System.out.println("jAppPagesRadioButtonActionPerformed: deselected now");                    
            }
        }
    }//GEN-LAST:event_jAppPagesRadioButtonActionPerformed

    private void jDocsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDocsRadioButtonActionPerformed
        if (cButtonSelected != TYPE_DOC) {
            if (jDocsRadioButton.isSelected()) {
                System.out.println("jDocsRadioButtonActionPerformed: selected now");
                cButtonSelected = TYPE_DOC;
                int index = jDocsComboBox.getSelectedIndex();
                ncurrentselected_doc_in_combobox = index;
                currentcpath = cpanel.cellpaths.get(DocIndexes.get(index));
                setupperpanestate();
                setlowerpanecontents();
            } else {
                // should never get this, if the button-group is working
                System.out.println("jDocsRadioButtonActionPerformed: deselected now");                    
            }
        }
    }//GEN-LAST:event_jDocsRadioButtonActionPerformed

    private void jToolsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToolsRadioButtonActionPerformed
        if (cButtonSelected != TYPE_TOOL) {
            if (jToolsRadioButton.isSelected()) {
                System.out.println("jToolsRadioButtonActionPerformed: selected now");
                cButtonSelected = TYPE_TOOL;
                int index = jToolsComboBox.getSelectedIndex();
                ncurrentselected_tool_in_combobox = index;
                currentcpath = cpanel.cellpaths.get(ToolIndexes.get(index));
                setupperpanestate();
                setlowerpanecontents();
            } else {
                // should never get this, if the button-group is working
                System.out.println("jToolsRadioButtonActionPerformed: deselected now");                    
            }
        }
    }//GEN-LAST:event_jToolsRadioButtonActionPerformed

    private void jBugReportsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBugReportsRadioButtonActionPerformed
        if (cButtonSelected != TYPE_BUGREPORT) {
            if (jBugReportsRadioButton.isSelected()) {
                System.out.println("jBugReportsRadioButtonActionPerformed: selected now");
                cButtonSelected = TYPE_BUGREPORT;
                int index = jBugReportsComboBox.getSelectedIndex();
                ncurrentselected_bugreport_in_combobox = index;
                currentcpath = cpanel.cellpaths.get(BugReportIndexes.get(index));
                setupperpanestate();
                setlowerpanecontents();
            } else {
                // should never get this, if the button-group is working
                System.out.println("jBugReportsRadioButtonActionPerformed: deselected now");                    
            }
        }
    }//GEN-LAST:event_jBugReportsRadioButtonActionPerformed

    private void jAppPagesRadioButtonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jAppPagesRadioButtonStateChanged
    }//GEN-LAST:event_jAppPagesRadioButtonStateChanged

    private void setupperpanestate() {
        switch (cButtonSelected) {
            case TYPE_APPPAGE:
                jAppPagesRadioButton.setSelected(true);
                jAppPagesComboBox.setEnabled(true);
                jDocsComboBox.setEnabled(false);
                jToolsComboBox.setEnabled(false);
                jBugReportsComboBox.setEnabled(false);
                break;
            case TYPE_DOC:
                jDocsRadioButton.setSelected(true);
                jAppPagesComboBox.setEnabled(false);
                jDocsComboBox.setEnabled(true);
                jToolsComboBox.setEnabled(false);
                jBugReportsComboBox.setEnabled(false);
                break;
            case TYPE_TOOL:
                jToolsRadioButton.setSelected(true);
                jAppPagesComboBox.setEnabled(false);
                jDocsComboBox.setEnabled(false);
                jToolsComboBox.setEnabled(true);
                jBugReportsComboBox.setEnabled(false);
                break;
            case TYPE_BUGREPORT:
                jBugReportsRadioButton.setSelected(true);
                jAppPagesComboBox.setEnabled(false);
                jDocsComboBox.setEnabled(false);
                jToolsComboBox.setEnabled(false);
                jBugReportsComboBox.setEnabled(true);
                break;
            default:
                System.out.println("setupperpanestate: illegal cButtonSelected == '" + cButtonSelected + "'");
                break;
        }
    }

    private void setlowerpanecontents() {
        CellPath cpath = null;
        switch (cButtonSelected) {
            case TYPE_APPPAGE:
                jCellPathTypeLabel.setText("App Page");
                cpath = this.cpanel.cellpaths.get(this.AppPageIndexes.get(ncurrentselected_apppage_in_combobox));
                break;
            case TYPE_DOC:
                jCellPathTypeLabel.setText("Document");
                cpath = this.cpanel.cellpaths.get(this.DocIndexes.get(ncurrentselected_doc_in_combobox));
                break;
            case TYPE_TOOL:
                jCellPathTypeLabel.setText("Tool");
                cpath = this.cpanel.cellpaths.get(this.ToolIndexes.get(ncurrentselected_tool_in_combobox));
                break;
            case TYPE_BUGREPORT:
                jCellPathTypeLabel.setText("Bug Report");
                cpath = this.cpanel.cellpaths.get(this.BugReportIndexes.get(ncurrentselected_bugreport_in_combobox));
                break;
        }
        jNameTextField.setText(cpath.pathname);
        if (cButtonSelected == TYPE_TOOL) {
            for (Tool tool : MatrixDashboardUI.mdui.tools)
                if (tool.id == cpath.toolid) {
                    jPathTypeComboBox.setSelectedIndex(Database.pathtypeLetterToIndex(tool.pathtype));
                    jPathTextField.setText(tool.path);
                }
        } else
            jPathTypeComboBox.setSelectedIndex(Database.pathtypeLetterToIndex(cpath.pathtype));
            jPathTextField.setText(cpath.path);
        jArgsTextField.setText(cpath.args);
    }

    private void setlowerpanestate() {
        jNameTextField.setEnabled(bLowerPaneEditable);
        jPathTypeComboBox.setEnabled(bLowerPaneEditable);
        if (cButtonSelected == TYPE_TOOL) {
            jChooseToolComboBox.setEnabled(bLowerPaneEditable);
            jChooseFileButton.setEnabled(false);
            jPathTextField.setEnabled(false);
        } else {
            jChooseToolComboBox.setEnabled(bLowerPaneEditable);
            jChooseFileButton.setEnabled(bLowerPaneEditable);
            jPathTextField.setEnabled(bLowerPaneEditable);
        }
        jArgsTextField.setEnabled(bLowerPaneEditable);
        
        jDeleteButton.setEnabled(!bLowerPaneEditable);
        jEditButton.setEnabled(!bLowerPaneEditable);
        jRunButton.setEnabled((!bLowerPaneEditable) && (jPathTypeComboBox.getSelectedIndex() != 0));
        jCancelButton.setEnabled(bLowerPaneEditable);
        jSaveButton.setEnabled(bLowerPaneEditable);
    }
    
    private void setpathtypescomboboxcontents() {
        System.out.println("setpathtypescomboboxcontents: called");
        String[] names = new String[40];
        int i = 0;
        // order is important
        names[i++] = Database.PATHTYPENAME_NONE;
        names[i++] = Database.PATHTYPENAME_EXECUTE;
        names[i++] = Database.PATHTYPENAME_BROWSEURL;
        names[i++] = Database.PATHTYPENAME_EDITFILE;
        names[i++] = Database.PATHTYPENAME_OPENFILE;
        names[i++] = Database.PATHTYPENAME_OWASPZAP;
        jPathTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(names));
    }               
    
    private void setchoosetoolcomboboxcontents() {
        System.out.println("setchoosetoolcomboboxcontents: called");
        String[] names = new String[40];
        int i = 0;
        for(Tool tool : MatrixDashboardUI.mdui.tools) {
            names[i++] = tool.name;
        }
        jChooseToolComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(names));
    }               

    private void jSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSaveButtonActionPerformed
        System.out.println("jSaveButtonActionPerformed: called");
        // TODO add your handling code here:
        bLowerPaneEditable = false;
        setlowerpanestate();
    }//GEN-LAST:event_jSaveButtonActionPerformed

    private void jCloseCellButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCloseCellButton1ActionPerformed
        System.out.println("jCloseCellButton1ActionPerformed: called");
        // TODO add your handling code here:
    }//GEN-LAST:event_jCloseCellButton1ActionPerformed

    private void jDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDeleteButtonActionPerformed
        System.out.println("jDeleteButtonActionPerformed: called");
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(f, "A basic JOptionPane message dialog");
        bLowerPaneEditable = false;
        setlowerpanestate();
    }//GEN-LAST:event_jDeleteButtonActionPerformed

    private void jRunButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRunButtonActionPerformed
        System.out.println("jRunButtonActionPerformed: called, cButtonSelected == " + cButtonSelected);
        String sPathText = null;
        String sPort = null;
        String sAPIkey = null;
        String sArgs = null;
        File file = null;
        int npathtypeindex = 0;
        if (cButtonSelected == TYPE_TOOL) {
            System.out.println("jRunButtonActionPerformed: currentcpath.toolid == " + currentcpath.toolid);
            for (Tool tool : MatrixDashboardUI.mdui.tools)
                if (tool.id == currentcpath.toolid) {
                    System.out.println("jRunButtonActionPerformed: tool.id == " + tool.id + ", tool.name '" + tool.name + "'");
                    npathtypeindex = Database.pathtypeLetterToIndex(tool.pathtype);
                    sPathText = tool.path;
                    System.out.println("jRunButtonActionPerformed: sPathText '" + sPathText + "'");
                    sPort = tool.port;
                    sAPIkey = tool.APIkey;
                }
            sArgs = jArgsTextField.getText();
        } else {
            npathtypeindex = jPathTypeComboBox.getSelectedIndex();
            sPathText = jPathTextField.getText();
            sArgs = jArgsTextField.getText();
        }
        switch (npathtypeindex) {
            case 0:     // PATHTYPENAME_NONE
                System.out.println("jRunButtonActionPerformed: PATHTYPENAME_NONE");
                break;
            case 1:     // PATHTYPENAME_EXECUTE
                System.out.println("jRunButtonActionPerformed: PATHTYPENAME_EXECUTE");
                try{
                    file = new File(sPathText);
                }catch(Exception e) {
                    System.out.println("jRunButtonActionPerformed: file exception" + e);
                };
                if (!file.canExecute())
                    System.out.println("jRunButtonActionPerformed: file '" + sPathText +"' not executable");
                else {
                    Runtime runTime = Runtime.getRuntime();
                    try{
			//Process process = runTime.exec(sPathText);
                        int nargs = 1;
                        String concat = sPathText + " " + sArgs;
                        String[] execargs = concat.split("[ ]+");
                        Process process = runTime.exec(execargs);
                    }catch(Exception e) {
                        System.out.println("jRunButtonActionPerformed: exec exception" + e);
                    };
                }
                break;
            case 2:     // PATHTYPENAME_BROWSEURL
                System.out.println("jRunButtonActionPerformed: PATHTYPENAME_BROWSEURL");
                URI uri = null;
                try{
                    uri = new URI(sPathText + sArgs);
                }catch(Exception e) {
                    System.out.println("jRunButtonActionPerformed: uri exception" + e);
                };
                System.out.println("jRunButtonActionPerformed: uri " + uri);
                try{
                    Desktop.getDesktop().browse(uri);
                }catch(Exception e) {
                    System.out.println("jRunButtonActionPerformed: browse exception" + e);
                };
                break;
            case 3:     // PATHTYPENAME_EDITFILE
                System.out.println("jRunButtonActionPerformed: PATHTYPENAME_EDITFILE");
                try{
                    file = new File(sPathText);
                }catch(Exception e) {
                    System.out.println("jRunButtonActionPerformed: file exception" + e);
                };
                try{
                    Desktop.getDesktop().edit(file);
                }catch(Exception e) {
                    System.out.println("jRunButtonActionPerformed: edit exception" + e);
                };
                break;
            case 4:     // PATHTYPENAME_OPENFILE
                System.out.println("jRunButtonActionPerformed: PATHTYPENAME_OPENFILE");
                try{
                    file = new File(sPathText);
                }catch(Exception e) {
                    System.out.println("jRunButtonActionPerformed: file exception" + e);
                };
                try{
                    Desktop.getDesktop().open(file);
                }catch(Exception e) {
                    System.out.println("jRunButtonActionPerformed: open exception" + e);
                };
                break;
            case 5:     // PATHTYPENAME_OWASPZAP
                System.out.println("jRunButtonActionPerformed: PATHTYPENAME_OWASPZAP");
                // https://github.com/zaproxy/zap-api-java
                ClientApi api = null;
                Integer nport = Integer.parseInt(sPort);
                try{
                    if (sAPIkey == " ")
                        api = new ClientApi(sPathText, nport);
                    else
                        api = new ClientApi(sPathText, nport, sAPIkey);
                }catch(Exception e) {
                    System.out.println("jRunButtonActionPerformed: ZAP ClientApi exception" + e);
                };
                // do something !!!
                String sReport = null;
                try{
                    sReport = new String(api.core.xmlreport(), StandardCharsets.UTF_8);
                }catch(Exception e) {
                    System.out.println("jRunButtonActionPerformed: ZAP xmlreport exception" + e);
                };
                System.out.println("jRunButtonActionPerformed: sReport == " + sReport);
                break;
        }
    }//GEN-LAST:event_jRunButtonActionPerformed

    private void jCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCancelButtonActionPerformed
        System.out.println("jCancelButtonActionPerformed: called");
        // TODO add your handling code here:
        bLowerPaneEditable = false;
        setlowerpanestate();
    }//GEN-LAST:event_jCancelButtonActionPerformed

    private void jNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNewButtonActionPerformed
        System.out.println("jNewButtonActionPerformed: called");
        // TODO add your handling code here:
        bLowerPaneEditable = true;
        setlowerpanestate();
    }//GEN-LAST:event_jNewButtonActionPerformed

    private void jEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEditButtonActionPerformed
        // TODO add your handling code here:
        bLowerPaneEditable = true;
        setlowerpanestate();
    }//GEN-LAST:event_jEditButtonActionPerformed

    private void jChooseToolComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChooseToolComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jChooseToolComboBoxActionPerformed

    private void jPathTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPathTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPathTypeComboBoxActionPerformed

    private void jChooseFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jChooseFileButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jChooseFileButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JComboBox<String> jAppPagesComboBox;
    private javax.swing.JLabel jAppPagesLabel;
    private javax.swing.JRadioButton jAppPagesRadioButton;
    private javax.swing.JLabel jArgsLabel;
    private javax.swing.JTextField jArgsTextField;
    private javax.swing.JComboBox<String> jBugReportsComboBox;
    private javax.swing.JLabel jBugReportsLabel;
    private javax.swing.JRadioButton jBugReportsRadioButton;
    private javax.swing.JButton jCancelButton;
    private javax.swing.JLabel jCellPathNameLabel;
    private javax.swing.JLabel jCellPathTypeLabel;
    private javax.swing.JButton jChooseFileButton;
    private javax.swing.JComboBox<String> jChooseToolComboBox;
    private javax.swing.JButton jCloseCellButton1;
    private javax.swing.JButton jDeleteButton;
    private javax.swing.JComboBox<String> jDocsComboBox;
    private javax.swing.JLabel jDocsLabel;
    private javax.swing.JRadioButton jDocsRadioButton;
    private javax.swing.JButton jEditButton;
    private javax.swing.JTextField jNameTextField;
    private javax.swing.JButton jNewButton;
    private javax.swing.JLabel jPathLabel;
    private javax.swing.JTextField jPathTextField;
    private javax.swing.JComboBox<String> jPathTypeComboBox;
    private javax.swing.JLabel jPathTypeLabel;
    private javax.swing.JButton jRunButton;
    private javax.swing.JButton jSaveButton;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JComboBox<String> jToolsComboBox;
    private javax.swing.JLabel jToolsLabel;
    private javax.swing.JRadioButton jToolsRadioButton;
    // End of variables declaration//GEN-END:variables
}
